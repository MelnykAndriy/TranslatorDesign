

# parser 

<signal-program> --> <program>

<program> --> PROGRAM <procedure-identifier> ;
                <block> .
                
<block> --> <declarations> 
            BEGIN
                <statements-list>
            END
               
<declarations> --> <label-declarations>

<label-declarations> --> LABEL <unsigned-integer> <labels-list> ; |  <empty>

<constant-declarations> --> CONST <constant-declarations-list> | <empty>

<constant-declarations-list> --> <constant-declaration> <constant-declarations-list> | <empty>

<constant-declaration> --> <constant-identifier> = <constant> ; 

<constant> --> <unsigned-integer> 


<labels-list> --> , <unsigned-integer> <labels-list> | <empty>

<statements-list> --> <statement> <statements-list> | <empty>

<statement> --> <unsigned-integer> : <statement> 
                | GOTO <unsigned-integer> ;
                | LINK <variable-identifier> , <unsigned-integer> ;
                | IN <unsigned-integer> ;
                | OUT <unsigned-integer> ;
                
<variable-identifier> --> <identifier>

<procedure-identifier> --> <identifier>

<constant-identifier> --> <identifier> 

# lexer 

<identifier> --> <letter><string>

<string> -->  <letter><string> 
            | <digit><string> 
            |  <empty>
            
<unsigned-integer> --> <digit> <digits-string>

<digits-string> --> <digit> <digits-string> | <empty>

<digit> --> [0-9]

<letter> --> [A-Z]